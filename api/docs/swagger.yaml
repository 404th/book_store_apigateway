definitions:
  book_service.Book:
    properties:
      about:
        type: string
      id:
        type: string
      isbn:
        type: string
      name:
        type: string
    type: object
  book_service.CreateBookRequest:
    properties:
      about:
        type: string
      isbn:
        type: string
      name:
        type: string
    type: object
  book_service.GetAllBooksResponse:
    properties:
      books:
        items:
          $ref: '#/definitions/book_service.Book'
        type: array
      count:
        type: integer
    type: object
  book_service.IDTracker:
    properties:
      id:
        type: string
    type: object
  book_service.UpdateBookRequest:
    properties:
      about:
        type: string
      id:
        type: string
      isbn:
        type: string
      name:
        type: string
    type: object
  config.Config:
    properties:
      bookServiceHost:
        type: string
      bookServicePort:
        type: integer
      environment:
        description: develop, staging, production
        type: string
      httpPort:
        type: string
      logLevel:
        type: string
    type: object
  models.ResponseModel:
    properties:
      code:
        type: integer
      data: {}
      error: {}
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /config:
    get:
      consumes:
      - application/json
      description: shows config of the project only on the development phase
      operationId: get-config
      parameters:
      - description: name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/config.Config'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: gets project config
      tags:
      - config
  /v1/book:
    get:
      consumes:
      - application/json
      description: get all books
      operationId: get-all-books
      parameters:
      - description: limit
        in: query
        name: limit
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/book_service.GetAllBooksResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get all books
      tags:
      - book
    post:
      consumes:
      - application/json
      description: create book
      operationId: create-book
      parameters:
      - description: book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/book_service.CreateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/book_service.IDTracker'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: create book
      tags:
      - book
  /v1/book/{id}:
    delete:
      consumes:
      - application/json
      description: delete book
      operationId: delete-book
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/book_service.IDTracker'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: delete book
      tags:
      - book
    get:
      consumes:
      - application/json
      description: get book
      operationId: get-by-id-book
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/book_service.Book'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: get book
      tags:
      - book
    put:
      consumes:
      - application/json
      description: update book
      operationId: update-book
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: desc
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/book_service.UpdateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  $ref: '#/definitions/book_service.IDTracker'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: update book
      tags:
      - book
  /v1/ping:
    get:
      consumes:
      - application/json
      description: this returns "pong" messsage to show service is working
      operationId: ping
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseModel'
            - properties:
                error:
                  type: string
              type: object
      summary: returns "pong" message
      tags:
      - config
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
